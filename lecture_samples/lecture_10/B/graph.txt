// vertex-вершина
// edge- ребра
// isolated vertex-у вершины нету ребра
// кратные ребра-когда у верщин много ребер к второй ребре
// ориентированный граф-когда у графа есть направление
// петля-когда ребро у вершины замыкается на самой себе
// псевдограф-когда у графа есть и петля и кратные ребра; 
// мультиграф-когда у графа кратные ребра
// простой граф когда у графа нету и петли и кр.ребры 
// v1(vertex) -->(edge) v2(vertex)
// graph:
// плотный-количество ребер стремится к макс
// разряженный- количество ребер стремится к мин(x<<N^2) x->ребра N->вершина
// closed walk-циклический путь в графе v_0=v_k
// число цикл- количество повторов по последовательности ребер, 
// которые мы повторили  
// если в графе нету цикло то это - дерево
// (spanning tree-оставляем мин.ребра,при которых дерево не распадется)
// обход графа:1.по ширине(bfs-queue) 2.по глубину(dfs-deep first search-recursion,loop operator)
// Eulerian path-в графе по ребр проходит лишь один раз(полу Ейлеровый граф без Ейлеровой цикли)
// Eulerian cycle- замкнутый Евлериан обход(полный Ейлеровый граф)
http://neerc.ifmo.ru/wiki/index.php?title=Теория_графов#.D0.9E.D1.81.D0.BD.D0.BE.D0.B2.D0.BD.D1.8B.D0.B5_.D0.BE.D0.BF.D1.80.D0.B5.D0.B4.D0.B5.D0.BB.D0.B5.D0.BD.D0.B8.D1.8F_.D1.82.D0.B5.D0.BE.D1.80.D0.B8.D0.B8_.D0.B3.D1.80.D0.B0.D1.84.D0.BE.D0.B2

конечный граф-где множество вершины и ребра- конечны
смежные ребра(adjacent) e1=(u1,v1) e2=(u1,v2)
степень вершины-количество ребр соединенных с вершин(в неориентированном графе)
компонент связности графа-Компонента связности графа {\displaystyle G}G (или просто компонента графа {\displaystyle G}G) — максимальный (по включению) связный подграф графа G.